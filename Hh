#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node* prev;
    struct node* next;
};

struct node* head;

void createDoublyList(int n) {
    // ... (rest of the createDoublyList function)
}

void printDoublyData() {
    // ... (rest of the printDoublyData function)
}

void insertAtMiddle(int position, int data) {
    struct node* newNode = (struct node*)malloc(sizeof(struct node));
    newNode->data = data;

    if (head == NULL) {
        head = newNode;
        newNode->prev = NULL;
        newNode->next = NULL;
        return;
    }

    struct node* ptr = head;
    for (int i = 1; i < position - 1 && ptr != NULL; i++) {
        ptr = ptr->next;
    }

    if (ptr == NULL) {
        printf("Invalid position\n");
        return;
    }

    newNode->prev = ptr;
    newNode->next = ptr->next;
    if (ptr->next != NULL) {
        ptr->next->prev = newNode;
    }
    ptr->next = newNode;
}

int main() {
    int n;
    printf("Input the number of nodes: ");
    scanf("%d", &n);
    createDoublyList(n);
    printf("\nData entered in the doubly linked list:\n");
    printDoublyData();

    int position, newData;
    printf("Enter position to insert at the middle: ");
    scanf("%d", &position);
    printf("Enter data to insert at position %d: ", position);
    scanf("%d", &newData);
    insertAtMiddle(position, newData);
    printf("\nData after inserting at the middle:\n");
    printDoublyData();

    // ... (rest of the main function)
    return 0;
}
